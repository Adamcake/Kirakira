<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//init
randomize();
frame = 0;
global.infJump = false;

//constants
introAppleHue = irandom(7) * 32;
introIndexAssignment = 0;
popsicleDir = 180;
orbitangle = 208;
orbitWidth = 0;
orbitIX = choose(1, 2);
spinRadius = 45;
berryangle = random(360);
berryradius = 80;
berryspeed = 1.8;
screenangle = 0;
finalangle = 90;
finalcircleangle = 0;
finalcircleradius = 1000; // changed from 550 to recreate original
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(instance_exists(objPlayer)) {
    frame += 1;
    
    //Start song
    if(frame == 50) {
        global.bossMusic = audio_play_sound(mKirakira, 2, 0);
    }
    //Spawn intro apples
    if(frame &gt;= 70 and frame &lt; 85 and (frame mod 2 == 0)) {
        var apple = instance_create(400, 100, objApple);
        apple.hspeed = random_range(10, 25);
        if(frame mod 4 == 0) apple.hspeed = -apple.hspeed;
        apple.vspeed = random_range(-6, 6);
        apple.image_xscale = 2.5;
        apple.image_yscale = 2.5;
        apple.image_blend = make_color_hsv(introAppleHue, 255, 255);
        apple.rotspeed = choose(5, -5);
        introAppleHue = (introAppleHue + 32) mod 256;
        introApples[introIndexAssignment] = apple;
        introIndexAssignment++;
    }
    //Stop intro apples and do first burst
    if(frame == 85) {
        with(objApple) {
            speed = 0;
        }
        
        var burstIX = irandom(6);
        var b1col = make_color_hsv(irandom(255), 255, 255);
        var b2col = make_color_hsv(irandom(255), 255, 255);
            
        var a = random(360);
        repeat(30) {
            var aa = instance_create(introApples[burstIX].x, introApples[burstIX].y, objCarrot);
            aa.direction = a;
            aa.speed = 10;
            a+=12;
        }
        repeat(30) {
            var aa = instance_create(introApples[burstIX+1].x, introApples[burstIX+1].y, objCarrot);
            aa.direction = a;
            aa.speed = 10;
            a+=12;
        }
    }
    //intro - 3 triangles
    if(frame == 175 or frame == 187 or frame == 199) {
        var ix = irandom(7);
        scrMakeAppleShape(introApples[ix].x, introApples[ix].y, random(360), 3, 7, 12);
    }
    //intro - 4 squares
    if(frame == 262 or frame == 275 or frame == 287 or frame == 300) {
        var ix = irandom(7);
        scrMakeAppleShape(introApples[ix].x, introApples[ix].y, random(360), 4, 6, 13);
    }
    //intro - six-point star (how do you even make a 5 point one lol)
    if(frame == 313) {
        var ix = irandom(7);
        var a = random(360);
        scrMakeAppleShape(introApples[ix].x, introApples[ix].y, a, 3, 7, 12);
        scrMakeAppleShape(introApples[ix].x, introApples[ix].y, a+180, 3, 7, 12);
    }
    
    //random360 skittles from intro apples
    if(frame &gt; 85 and frame &lt; 480) {
        var r = 1;
        if(frame &gt;= 313) r = 10;
        if(irandom(r) != 0) {
            var rIX = irandom(7);
            var a = instance_create(introApples[rIX].x, introApples[rIX].y, objApple);
            a.sprite_index = sprSkittle;
            a.image_xscale = 1.2;
            a.image_yscale = 1.2;
            a.image_index = irandom(4);
            a.direction = random(360);
            a.image_speed = 0;
            if(frame &gt;= 440) a.speed = 14;
            else if(frame &gt;= 400) a.speed = 13;
            else if(frame &gt;= 360) a.speed = 12;
            else if(frame &gt;= 313) a.speed = 11;
            else a.speed = 10;
        }
    }
    //Screen shake at end of intro
    if(frame &gt; 320 and frame &lt; 480) {
        var limit = ((frame - 313) / 25);
        view_xview[0] = random_range(-limit, limit);
        view_yview[0] = random_range(-limit, limit);
    }
    if(frame == 480) {
        view_xview[0] = 0;
        view_yview[0] = 0;
    }
    //Intro end 1
    if(frame &gt;= 490 and frame &lt; 525) {
        for(var i=0; i&lt;8; i++) {
            with(introApples[i]) {
                repeat(5) {
                    var a = instance_create(x, y, objCorn);
                    a.image_blend = image_blend;
                    a.vspeed = random_range(-1, -4.5);
                    a.hspeed = random_range(-4, 4);
                    a.gravity = 0.5;
                }
                instance_destroy();
            }
        }
    }
    //Intro end 2
    if(frame == 525) {
        with(objCorn) {gravity = -0.6;}
    }
    
    
    
    //Rice rain 1
    if(frame &gt;= 550 and frame &lt;= 660) {
        var a = instance_create(random(800), 0, objRice);
        a.direction = -random(180);
        a.speed = 12;
        a.dir = 0;
    }
    //Rice rain 1 stop
    if(frame == 663) {
        with(objRice){speed = 0; image_index = 1;}
    }
    //Rice rain 2
    if(frame &gt;= 670 and frame &lt; 738) {
        var a = instance_create(random(800), 0, objRice);
        a.direction = -random(180);
        a.speed = 12;
        a.image_index = 2;
        a.dir = 180;
    }
    //Rice inverts
    if(frame == 738 or frame == 764) {
        with(objRice) {
            direction = dir;
            speed = 4;
            image_index = 1;
        }
    }
    if(frame == 751 or frame == 777) {
        with(objRice) {speed = -4;}
    }
    if(frame == 790) {
        with(objRice) {speed = 0;}
    }
    //Rice rain 3 (curving)
    if(frame &gt; 790 and frame &lt; 989) {
        var a = instance_create(random(1800), 0, objRice);
        a.image_index = choose(3, 4, 5, 6);
        a.speed = random_range(10, 12);
        a.direction = -random(180);
        a.curve = choose(-0.75, 0.75);
    }
    //Rice rain end - move towards player
    if(frame == 981 or frame == 988 or frame == 996){
        with(objRice) {
            direction = point_direction(x, y, objPlayer.x, objPlayer.y);
            speed = 12;
            alarm[0] = 1; //Alarm 0 makes it stop on the next frame. I do it this way so they stop even if the player dies.
            curve = 0;
        }
    }
    //Rice rain end - move away from player
    if(frame == 1004) {
        with(objRice) {
            direction = point_direction(objPlayer.x, objPlayer.y, x, y);
            speed = 18;
        }
    }
    
    
    
    //Sideways popsicles (chorus start)
    if(frame &gt; 1040 and frame &lt; 1925 and !(frame &gt;= 1450 and frame &lt; 1510)) {
        var aa = 2;
        if(frame &gt;= 1510) aa = 3;
        if(irandom(aa) == 0) {
            var a = instance_create(808, random(608), objPopsicle);
            a.direction = popsicleDir + choose(-10, 10);
            a.speed = random_range(9,12);
            a.noswitch = false;
        }
        if(irandom(aa) == 0) {
            var a = instance_create(-8, random(608), objPopsicle);
            a.direction = popsicleDir + choose(-10, 10);
            a.speed = random_range(9,12);
            a.noswitch = false;
        }
    }
    //Downwards red popsicles
    if(frame &gt;= 1515 and frame &lt; 1925 and frame mod 8 == 0) {
        var a = instance_create(random(800), -8, objPopsicle);
        a.vspeed = 8;
        a.image_index = 1;
        a.noswitch = true;
    }
    //First direction switch
    if(frame == 1270) {
        instance_create(0, 0, objBigRightArrow);
    }
    if(frame == 1275) {
        popsicleDir = 0;
        with(objPopsicle) {
            direction += 180;
            speed = random_range(9,12);
        }
        objBigRightArrow.x += 15;
        objBigRightArrow.speed -= 3;
    }
    if(frame &gt;= 1275 and frame &lt;= 1280) {
        view_xview[0] = (5 - (frame - 1275)) * 3;
    }
    //Stutters before second direction switch
    //Alarm 1 makes it stop. I do it this way so they stop even if the player dies.
    if(frame == 1450) {
        with(objPopsicle) {speed = 0;}
    }
    if(frame == 1461) {
        with(objPopsicle) {speed = 25; alarm[1] = 1; direction = random_range(-15, 15);}
    }
    if(frame == 1472) {
        with(objPopsicle) {speed = 25; alarm[1] = 1; direction = random_range(-15, 15);}
    }
    if(frame == 1483) {
        with(objPopsicle) {speed = 25; alarm[1] = 1; direction = random_range(-15, 15);}
    }
    if(frame == 1494) {
        with(objPopsicle) {speed = 25; alarm[1] = 1; direction = random_range(-15, 15);}
    }
    if(frame == 1502) {
        with(objPopsicle) {speed = 25; alarm[1] = 1; direction = choose(-10, 10);}
    }
    //Second direction switch
    if(frame == 1505) {
        instance_create(0, 0, objBigLeftArrow);
    }
    if(frame == 1510) {
        popsicleDir = 180;
        with(objPopsicle) {
            direction += 180;
            speed = random_range(9,12);
        }
        objBigLeftArrow.x += 15;
        objBigLeftArrow.speed -= 3;
    }
    if(frame &gt;= 1510 and frame &lt;= 1515) {
        view_xview[0] = (5 - (frame - 1510)) * -3;
    }
    
    //Third direction switch
    if(frame == 1740) {
        instance_create(0, 0, objBigRightArrow);
        
    }
    if(frame == 1745) {
        popsicleDir = 0;
        with(objPopsicle) {
            if(!noswitch) {
                direction += 180;
                speed = random_range(9,12);
            }
        }
        objBigRightArrow.x += 15;
        objBigRightArrow.speed -= 3;
    }
    if(frame &gt;= 1745 and frame &lt;= 1750) {
        view_xview[0] = (5 - (frame - 1745)) * 3;
    }
    //Chorus 1 end - fade to white
    if(frame == 1900) {
        instance_create(0, 0, objFadeWhite);
    }
    //Chorus 1 end - remove everything (this is slightly before the screen has fully faded to white)
    if(frame == 1960) {
        with(objPopsicle){instance_destroy();}
    }
    
    
    
    //Remove white fade and set up orbit as 4th attack
    if(frame == 1984) {
        with(objFadeWhite){instance_destroy();}
        
        orbit1 = instance_create(0, 0, objApple);
        orbit2 = instance_create(0, 0, objApple);
        orbit1.image_xscale = 3;
        orbit1.image_yscale = 3;
        orbit2.image_xscale = 3;
        orbit2.image_yscale = 3;
        orbit1.nodel = true;
        orbit2.nodel = true;
    }
    //Control the colour and position of the two orbiting apples during orbit attack
    if(frame &gt;= 1984 and frame &lt; 2467) {
        orbit1.image_blend = objForeground.image_blend;
        orbit2.image_blend = objForeground.image_blend;
    
        orbit1.x = 400 + lengthdir_x(orbitWidth, orbitangle);
        orbit2.x = 400 + lengthdir_x(orbitWidth, orbitangle + 180);
        orbit1.y = 100 + (lengthdir_y(300, orbitangle) / 6);
        orbit2.y = 100 + (lengthdir_y(300, orbitangle + 180) / 6);
        
        if(frame &gt;= 2400) orbitangle += 46/3;
        else orbitangle += 46/9;
    }
    //Spin the orbit apples out from the center
    if(frame &gt;= 1984 and frame &lt;= 1998) {
        orbitWidth += 20;
    }
    //random360 during first half of orbit attack
    if(frame &gt;= 1984 and frame &lt; 2221) {
        if(frame mod 6 == 0) {
            var a = instance_create(orbit1.x, orbit1.y, objApple);
            a.sprite_index = sprSkittle;
            a.image_xscale = 1.2;
            a.image_yscale = 1.2;
            a.image_index = irandom(4);
            a.direction = random(360);
            a.image_speed = 0;
            a.speed = 10;
        }
        else if(frame mod 6 == 3) {
            var a = instance_create(orbit2.x, orbit2.y, objApple);
            a.sprite_index = sprSkittle;
            a.image_xscale = 1.2;
            a.image_yscale = 1.2;
            a.image_index = irandom(4);
            a.direction = random(360);
            a.image_speed = 0;
            a.speed = 10;
        }
    }
    //Orbit attack - initial burst
    if(frame == 1984) {
        var a = random(360);
        repeat(30) {
            var aa = instance_create(400, 100, objCarrot);
            aa.direction = a;
            aa.speed = 10;
            a+=12;
        }
    }
    //Orbit attack - triangles
    if(frame == 2073 or frame == 2088 or frame == 2103) {
        var orbitap;
        if(orbitIX == 1) orbitap = orbit1;
        else orbitap = orbit2;
        scrMakeAppleShape(orbitap.x, orbitap.y, random(360), 3, 7, 12);
        
        if(orbitIX == 1) orbitIX = 2;
        else orbitIX = 1;
    }
    //Squares
    if(frame == 2162 or frame == 2177 or frame == 2192 or frame == 2207) {
        var orbitap;
        if(orbitIX == 1) orbitap = orbit1;
        else orbitap = orbit2;
        scrMakeAppleShape(orbitap.x, orbitap.y, random(360), 4, 6, 13);
        
        if(orbitIX == 1) orbitIX = 2;
        else orbitIX = 1;
    }
    
    //Six-point star 2221
    if(frame == 2221) {
        var orbitap;
        if(orbitIX == 1) orbitap = orbit1;
        else orbitap = orbit2;
        
        var a = random(360);
        scrMakeAppleShape(orbitap.x, orbitap.y, a, 3, 7, 12);
        scrMakeAppleShape(orbitap.x, orbitap.y, a+180, 3, 7, 12);
    }
    //random360 during second half of orbit attack
    if(frame &gt; 2221 and frame &lt; 2400) {
        if(frame mod 4 == 0) {
            var a = instance_create(orbit1.x, orbit1.y, objApple);
            a.sprite_index = sprSkittle;
            a.image_xscale = 1.2;
            a.image_yscale = 1.2;
            a.image_index = irandom(4);
            a.direction = -random(180);
            a.image_speed = 0;
            a.speed = 11;
        }
        else if(frame mod 4 == 2) {
            var a = instance_create(orbit2.x, orbit2.y, objApple);
            a.sprite_index = sprSkittle;
            a.image_xscale = 1.2;
            a.image_yscale = 1.2;
            a.image_index = irandom(4);
            a.direction = -random(180);
            a.image_speed = 0;
            a.speed = 11;
        }
    }
    //random360 during end of orbit attack
    if(frame &gt;= 2400 and frame &lt; 2435) {
        var a = instance_create(orbit1.x, orbit1.y, objApple);
        a.sprite_index = sprSkittle;
        a.image_xscale = 1.2;
        a.image_yscale = 1.2;
        a.image_index = irandom(4);
        a.direction = -random(180);
        a.image_speed = 0;
        a.speed = 9;
            
        var a = instance_create(orbit2.x, orbit2.y, objApple);
        a.sprite_index = sprSkittle;
        a.image_xscale = 1.2;
        a.image_yscale = 1.2;
        a.image_index = irandom(4);
        a.direction = -random(180);
        a.image_speed = 0;
        a.speed = 9;
    }
    //Set skittles' gravity upwards
    if(frame == 2435) {
        with(objApple) {
            if(!nodel) {
                gravity = -0.8;
            }
        }
    }
    //Orbit spins off screen
    if(frame &gt;= 2426 and frame &lt; 2467) {
        orbitWidth += 5;
    }
    //Delete orbit apples
    if(frame == 2467) {
        with(orbit1){instance_destroy();}
        with(orbit2){instance_destroy();}
    }
    //Screen shake at end of orbit
    if(frame &gt; 2221 and frame &lt; 2400) {
        var limit = ((frame - 2222) / 25);
        view_xview[0] = random_range(-limit, limit);
        view_yview[0] = random_range(-limit, limit);
    }
    if(frame == 2467) {
        view_xview[0] = 0;
        view_yview[0] = 0;
    }
    
    
    
    //Donuts come from left
    if(frame &gt;= 2456 and frame &lt; 2509 and frame mod 2 == 0) {
        var a = instance_create(0, random(608), objDonut);
        a.direction = 0
        a.speed = 10;
    }
    if(frame == 2521) {
        with(objDonut) {
            speed = 0;
            image_blend = make_color_rgb(150, 150, 150);
            image_alpha = 0.5;
        }
    }
    //Donuts come from right
    if(frame &gt;= 2522 and frame &lt; 2567 and frame mod 2 == 0) {
        var a = instance_create(800, random(608), objDonut);
        a.direction = 180;
        a.speed = 10;
    }
    if(frame == 2573) {
        with(objDonut) {
            speed = 0;
            image_blend = make_color_rgb(150, 150, 150);
            image_alpha = 0.5;
        }
    }
    //Donuts come from top
    if(frame &gt;= 2574 and frame &lt; 2626 and frame mod 2 == 0) {
        var a = instance_create(random(800), 0, objDonut);
        a.direction = 270;
        a.speed = 10;
    }
    if(frame == 2638) {
        with(objDonut) {
            speed = 0;
            image_blend = make_color_rgb(150, 150, 150);
            image_alpha = 0.5;
        }
    }
    //Create wall spawners and spawn walls with them
    if(frame == 2639) {
        instance_create(20, 620, objMegaSkittle);
    }
    if(frame == 2652) {
        with(objMegaSkittle) {if(spawn == 0) spawn = 1;}
    }
    if(frame == 2665) {
        instance_create(215, 620, objMegaSkittle);
    }
    if(frame == 2678) {
        with(objMegaSkittle) {if(spawn == 0) spawn = 1;}
    }
    //Wall movement and donut movement
    if(frame == 2691) {
        with(objDonut) {image_blend = make_color_rgb(255,255,255); speed = 1; direction = random(360); image_alpha = 1;}
        with(objApple) {direction = 0; speed = 2.6;}
    }
    //Donut-wall attack end - clear screen
    if(frame == 2912) {
        var f = instance_create(0, 0, objFadeWhite);
        f.image_alpha = 1;
        with(objDonut) {instance_destroy();}
        with(objApple) {instance_destroy();}
    }
    
    
    
    //Setup 6th attack (circles spin around points (80, 80) and (720, 80) )
    if(frame == 2913) {
        with(objFadeWhite){fadespeed = -0.1;}
        
        spin1angle = random(360);
        spin2angle = random(360);
        var a = 0;
        repeat(3) {
            spin1apples[a] = instance_create(0, 0, objApple);
            spin2apples[a] = instance_create(0, 0, objApple);
            
            spin1apples[a].image_xscale = 2;
            spin1apples[a].image_yscale = 2;
            spin2apples[a].image_xscale = 2;
            spin2apples[a].image_yscale = 2;
            
            a += 1;
        }
    }
    //Control colour and spinning of apples during 6th attack
    if(frame &gt;= 2913 and frame &lt; 3412) {
        var a = 0;
        repeat(3) {
            spin1apples[a].image_blend = objForeground.image_blend;
            spin2apples[a].image_blend = objForeground.image_blend;
            
            spin1apples[a].x = 90 + lengthdir_x(spinRadius, spin1angle + (120 * a));
            spin1apples[a].y = 90 + lengthdir_y(spinRadius, spin1angle + (120 * a));
            
            spin2apples[a].x = 710 + lengthdir_x(spinRadius, spin2angle + (120 * a));
            spin2apples[a].y = 90  + lengthdir_y(spinRadius, spin2angle + (120 * a));
            
            a += 1;
        }
        
        if(frame &gt;= 3111 and frame &lt;= 3172) {
            spin1angle += 4;
            spin2angle -= 4;
        }
        else if(frame &lt; 3293) {
            spin1angle -= 7;
            spin2angle += 7;
        }
        else {
            spin1angle -= 16;
            spin2angle += 16;
        }
    }
    //random bullets during spinning attack
    if((frame &gt;= 2932 and frame &lt; 3111) or (frame &gt; 3293 and frame &lt; 3345)) {
        var a = irandom(2);
        var variance = 8;
        if(frame &gt;3293) variance = 2;
        
        var bullet = instance_create(spin1apples[a].x, spin1apples[a].y, objApple);
        bullet.sprite_index = sprSkittle;
        bullet.image_xscale = 1.2;
        bullet.image_yscale = 1.2;
        bullet.image_index = irandom(4);
        bullet.direction = point_direction(spin1apples[a].x, spin1apples[a].y, 90, 90) + (random_range(-variance, variance));
        bullet.image_speed = 0;
        bullet.speed = 8;
        
        var bullet = instance_create(spin2apples[a].x, spin2apples[a].y, objApple);
        bullet.sprite_index = sprSkittle;
        bullet.image_xscale = 1.2;
        bullet.image_yscale = 1.2;
        bullet.image_index = irandom(4);
        bullet.direction = point_direction(spin2apples[a].x, spin2apples[a].y, 710, 90) + (random_range(-variance, variance));
        bullet.image_speed = 0;
        bullet.speed = 8;
    }
    if(frame &gt;= 3171 and frame &lt;= 3219) {
        var a = irandom(2);
        var variance = 8;
        
        var bullet = instance_create(spin1apples[a].x, spin1apples[a].y, objApple);
        bullet.sprite_index = sprSkittle;
        bullet.image_xscale = 1.2;
        bullet.image_yscale = 1.2;
        bullet.image_index = irandom(4);
        bullet.direction = point_direction(spin1apples[a].x, spin1apples[a].y, 90, 90) + (random_range(-variance, variance));
        bullet.image_speed = 0;
        bullet.speed = 8;
    }
    if(frame &gt;= 3234 and frame &lt;= 3280) {
        var a = irandom(2);
        var variance = 8;
        
        var bullet = instance_create(spin2apples[a].x, spin2apples[a].y, objApple);
        bullet.sprite_index = sprSkittle;
        bullet.image_xscale = 1.2;
        bullet.image_yscale = 1.2;
        bullet.image_index = irandom(4);
        bullet.direction = point_direction(spin2apples[a].x, spin2apples[a].y, 710, 90) + (random_range(-variance, variance));
        bullet.image_speed = 0;
        bullet.speed = 8;
    }
    
    //Spawn first wall on 6th attack
    if(frame == 3171) {
        var wallY = 7;
        repeat(44) {
            var w = instance_create(0, wallY, obj6thWall);
            w.direction = 0;
            w.speed = 9;
            w.friction = 0.3;
            wallY += 14;
        }
    }
    //Spawn second wall on 6th attack
    if(frame == 3232) {
        var wallY = 7;
        repeat(44) {
            var w = instance_create(800, wallY, obj6thWall);
            w.direction = 180;
            w.speed = 9;
            w.friction = 0.3;
            wallY += 14;
        }
    }
    //Start moving walls in closer
    if(frame == 3293) {
        with(obj6thWall) {
            speed = 2;
            friction = 0;
        }
    }
    //Move apple circles inwards
    if(frame &gt;= 3345 and frame &lt; 3353) {
        spinRadius -= 4;
    }
    //Stop walls
    if(frame == 3353) {
        with(obj6thWall) {
            speed = 0;
        }
    }
    //Bursts for the end of the spinning attack
    if(frame == 3348 or frame == 3362 or frame == 3369 or frame == 3376 or frame == 3383) {
        var a = random(360);
        repeat(20) {
            var aa = instance_create(90, 90, objCarrot);
            aa.direction = a + random_range(-2, 2);
            aa.speed = random_range(6, 10);
            a+=18;
        }
        a = random(360);
        repeat(20) {
            var aa = instance_create(710, 90, objCarrot);
            aa.direction = a + random_range(-2, 2);
            aa.speed = random_range(6, 10);
            a+=18;
        }
    }
    
    
    
    //Clear screen and add black fade-in
    if(frame == 3412) {
        var a = instance_create(0, 0, objFadeBlack);
        with(objApple){instance_destroy();}
        with(obj6thWall){instance_destroy();}
        with(objCarrot){instance_destroy();}
    }
    //Spawn each of the bouncing apples
    if(frame == 3412 or frame == 3427 or frame == 3442 or frame == 3456 or frame == 3471 or frame == 3486 or frame == 3501 or frame == 3515
    or frame == 3530 or frame == 3545 or frame == 3560 or frame == 3574 or frame == 3589 or frame == 3604 or frame == 3619 or frame == 3633) {
        ap = instance_create(random_range(32, room_width - 32), 32, objApple);
        ap.direction = random(360);
        ap.speed = 5;
        ap.bounce = 1;
        ap.image_xscale = 3;
        ap.image_yscale = 3;
    }
    //Resize the most recently-spawned bouncing apple from its original spawn size down to regular size
    if(frame &gt;= 3412 and frame &lt;= 3644) {
        if(ap.image_xscale &gt; 1) {
            ap.image_xscale -= 0.2;
            ap.image_yscale -= 0.2;
        }
    }
    //Recolour all the bouncing apples during bouncing attack
    if(frame &gt;= 3412 and frame &lt;= 3900) {
        with(objApple) {
            if(bounce) {
                image_blend = objForeground.image_blend;
            }
        }
    }
    //Bouncing speed up
    if(frame &gt;= 3648 and frame &lt; 3884) {
        with(objApple) {speed += 0.03;}
    }
    //Bouncing end - the "2" state means the apple was previously bouncing but now it's not 
    if(frame == 3884) {
        with(objApple) {bounce = 2;}
    }
    
    
    
    //Spawn all 4 berries invisible, and make the first one appear
    if(frame == 3885) {
        view_xview[0] = 36;
        var ixass = 0;
        repeat(4) {
            var a = instance_create(0, 0, objBerry);
            a.image_xscale = 2;
            a.image_yscale = 2;
            berries[ixass] = a;
            ixass += 1;
            a.visible = false;
        }
        berries[0].visible = true;
    }
    //Make second berry appear
    if(frame == 3944) {
        view_xview[0] = 36;
        berries[2].visible = true;
    }
    //Make third berry appear
    if(frame == 4003) {
        view_xview[0] = 36;
        berries[1].visible = true;
    }
    //Make fourth berry appear
    if(frame == 4062) {
        view_xview[0] = 36;
        berries[3].visible = true;
    }
    //Fix the camera gradually back to its normal state
    if(frame &gt;= 3885 and frame &lt;= 4068) {
        if(view_xview[0] &gt; 0) {
            view_xview[0] -= 9;
            view_yview[0] = (view_xview[0] * 608 / 800);
            view_wview[0] = 800 - (view_xview[0] * 2);
            view_hview[0] = (view_wview[0] * 608 / 800);
        }
    }
    
    //Spin the berry circle
    if(frame &gt;= 3885 and frame &lt;= 4500) {
        berryangle += berryspeed;
        
        var b = 0;
        repeat(4) {
            berries[b].x = 400 + lengthdir_x(berryradius, berryangle + (b * 90));
            berries[b].y = 240 + lengthdir_y(berryradius, berryangle + (b * 90));
            b += 1;
        }
    }
    //Make the berry circle's radius slightly larger and make them spin faster (1)
    if(frame == 4122) {
        berryspeed = 4.5;
        berryradius = 100;
    }
    //First 8 berry bursts - these are squares with one corner pointed towards the center of the circle
    if(frame == 4122 or frame == 4137 or frame == 4152 or frame == 4166 or frame == 4181 or frame == 4196 or frame == 4211 or frame == 4225) {
        var b = 0;
        repeat(4) {
            var angle = point_direction(berries[b].x, berries[b].y, 400, 240);
            repeat(4) {
                var a = instance_create(berries[b].x, berries[b].y, objApple);
                a.sprite_index = sprSkittle;
                a.image_index = irandom(4);
                a.speed = 7;
                a.direction = angle;
                a.image_xscale = 1.5;
                a.image_yscale = 1.5;
                a.image_speed = 0;
                angle += 90;
            }
            b += 1;
        }
    }
    //Make the berry circle's radius slightly larger and make them spin faster (2)
    if(frame == 4240) {
        berryradius = 115;
        berryspeed = 6;
    }
    //Second 8 bursts - these are triangles pointed at a random other berry
    if(frame == 4240 or frame == 4248 or frame == 4255 or frame == 4262 or frame == 4269 or frame == 4277 or frame == 4284 or frame == 4291) {
        var b = 0;
        repeat(4) {
            var b2 = irandom(2);
            if(b2 &gt;= b) b2 += 1;
            
            var angle = point_direction(berries[b].x, berries[b].y, berries[b2].x, berries[b2].y);
            repeat(5) {
                var a = instance_create(berries[b].x, berries[b].y, objApple);
                a.sprite_index = sprSkittle;
                a.image_index = irandom(4);
                a.speed = 7;
                a.direction = angle;
                a.image_xscale = 1.5;
                a.image_yscale = 1.5;
                a.image_speed = 0;
                angle += 72;
            }
            b += 1;
        }
    }
    //Make the berry circle's radius slightly larger and make them spin faster (3)
    if(frame == 4240) {
        berryradius = 125;
        berryspeed = 7;
    }
    //Make all berries shoot at center of circle with a snall random angle offset
    if(frame &gt;= 4300 and frame &lt; 4362 and frame mod 2 == 0) {
        var b = 0;
        repeat(4) {
            var a = instance_create(berries[b].x, berries[b].y, objApple);
            a.sprite_index = sprSkittle;
            a.image_index = irandom(4);
            a.speed = 8;
            a.direction = point_direction(berries[b].x, berries[b].y, 400, 240) + random_range(-20, 20);
            a.image_xscale = 1.5;
            a.image_yscale = 1.5;
            a.image_speed = 0;
            b+=1;
        }
    }
    //Berries spiral off screen (holy hell this code is lazy)
    if(frame == 4362) {
        y = 0;
        direction = 90;
        speed = 6;
        gravity = 0.5;
    }
    if(frame &gt;= 4362 and frame &lt; 4500) {
        berryradius = 125 + y;
        berryspeed -= 0.1;
    }
    if(frame == 4500) {
        with(objBerry){instance_destroy();}
        gravity = 0;
        y = 0;
        speed = 0;
    }
    
    
    
    //spin screen and change the room layout in the middle on frame 4455
    if(frame &gt;= 4448 and frame &lt; 4455) {
        var ratio = cos(degtorad(screenangle));
        view_wview[0] = 800 / ratio;
        view_xview[0] = ((1 - ratio) * -400) * view_wview[0] / 800;
        screenangle += (90/7);
    }
    if(frame == 4455) {
        objPlayer.x = 400;
        objPlayer.y = 164;
        objPlayer.frozen = true;
        objPlayer.vspeed = 0;
        
        view_xview[0] = 400;
        view_wview[0] = 0;
        
        with(objBlock){instance_destroy();}
        
        instance_create(288, 176, objBlock1);
        instance_create(320, 176, objBlock2);
        instance_create(352, 176, objBlock2);
        instance_create(384, 176, objBlock2);
        instance_create(416, 176, objBlock2);
        instance_create(448, 176, objBlock2);
        instance_create(480, 176, objBlock1);
    }
    if(frame &gt; 4455 and frame &lt; 4462) {
        screenangle -= (90/7);
        var ratio = cos(degtorad(screenangle));
        view_wview[0] = 800 / ratio;
        view_xview[0] = ((1 - ratio) * -400) * view_wview[0] / 800;
        objPlayer.vspeed = 0;
    }
    if(frame == 4462) {
        view_xview[0] = 0;
        view_wview[0] = 800;
        objPlayer.frozen = false;
    }
    
    
    
    //Chorus 2 - spawn blue popsicles
    if(frame == 4477) {
        popsicleDir = 180;
    }
    if(frame &gt; 4477 and frame &lt; 5362 and !(frame &gt;= 4895 and frame &lt; 4955)) {
        var aa = 3;
        if(frame &gt;= 4895) aa = 4;
        if(frame &gt;= 5192) aa = 8;
        if(irandom(aa) == 0) {
            if(frame &lt; 5370) {
                var a = instance_create(808, random(700), objPopsicle);
                a.direction = popsicleDir + choose(-10, 10);
                a.speed = random_range(9,12);
                a.noswitch = false;
            }
        }
        if(irandom(aa) == 0) {
            if(frame &lt; 5370) {
                var a = instance_create(-8, random(700), objPopsicle);
                if(frame &gt; 5192) a.direction = choose(-10, 10);
                else a.direction = popsicleDir + choose(-10, 10);
                a.speed = random_range(9,12);
                a.noswitch = false;
            }
        }
    }
    //First direction switch
    if(frame == 4707) {
        instance_create(0, 0, objBigRightArrow);
    }
    if(frame == 4712) {
        popsicleDir = 0;
        with(objPopsicle) {
            direction += 180;
            speed = random_range(9,12);
        }
        objBigRightArrow.x += 15;
        objBigRightArrow.speed -= 3;
    }
    if(frame &gt;= 4712 and frame &lt;= 4717) {
        view_xview[0] = (5 - (frame - 4712)) * 3;
    }
    //Stutters before second direction switch
    //Alarm 1 makes the popsicle stop moving. I do it this way so they stop even if the player dies.
    if(frame == 4895) {
        with(objPopsicle) {speed = 0;}
    }
    if(frame == 4906) {
        with(objPopsicle) {speed = 25; alarm[1] = 1; direction = random_range(-15, 15);}
    }
    if(frame == 4917) {
        with(objPopsicle) {speed = 25; alarm[1] = 1; direction = random_range(-15, 15);}
    }
    if(frame == 4928) {
        with(objPopsicle) {speed = 25; alarm[1] = 1; direction = random_range(-15, 15);}
    }
    if(frame == 4939) {
        with(objPopsicle) {speed = 25; alarm[1] = 1; direction = random_range(-15, 15);}
    }
    if(frame == 4947) {
        with(objPopsicle) {speed = 25; alarm[1] = 1; direction = choose(-10, 10);}
    }
    //Second switch
    if(frame == 4950) {
        instance_create(0, 0, objBigLeftArrow);
    }
    if(frame == 4955) {
        popsicleDir = 180;
        with(objPopsicle) {
            direction += 180;
            speed = random_range(9,12);
        }
        objBigLeftArrow.x += 15;
        objBigLeftArrow.speed -= 3;
    }
    if(frame &gt;= 4955 and frame &lt;= 4960) {
        view_xview[0] = (5 - (frame - 4955)) * -3;
    }
    //Upward red popsicles
    if(frame &gt; 4955 and frame &lt; 5370 and frame mod 6 == 0) {
        var a = instance_create(random(800), 616, objPopsicle);
        a.image_index = 1;
        if(frame &gt;= 5192) a.vspeed = -2.5;
        else a.vspeed = -8;
    }
    //reds slow down
    if(frame == 5192) {
        with(objPopsicle) {
            if(image_index == 1) {
                vspeed = -2.5;
            }
        }
    }
    //Chorus 2 end - move away the left-moving blue popsicles, and enable inf jump ("one")
    if(frame == 5370) {
        with(objPopsicle) {
            if(hspeed &lt; 0 and image_index == 0) {
                woo = true;
            }
            //speed = 0;
        }
        global.infJump = true;
    }
    //Chorus 2 end - move away the right-moving blue popsicles, and show inf jump message ("more")
    if(frame == 5385) {
        with(objPopsicle) {
            if(image_index == 0) {
                woo = true;
            }
        }
        instance_create(400, 304, objInfJump);
    }
    //Chorus 2 end - move away the red popsicles ("time")
    if(frame == 5400) {
        with(objPopsicle) {
            woo = true;
        }
    }
    //Break platform ("woo")
    if(frame == 5414) {
        with(objBlock1){woo = true;}
        with(objBlock2){woo = true;}
    }
    
    
    
    //Final attack - spawn corn
    if(frame &gt;= 5429 and frame &lt; 5888 /*and frame mod 3 == 0*/) { // commented this out to recreate original
        finalangle += 4;
        var a = instance_create(random(800), -8, objCorn);
        a.direction = finalangle;
        a.speed = 12; // changed all these from 8 to recreate original
        a.image_speed = 0;
        a = instance_create(random(800), 616, objCorn);
        a.direction = finalangle;
        a.speed = 12;
        a.image_speed = 0;
        a = instance_create(-8, random(608), objCorn);
        a.direction = finalangle;
        a.speed = 12;
        a.image_speed = 0;
        a = instance_create(808, random(608), objCorn);
        a.direction = finalangle;
        a.speed = 12;
        a.image_speed = 0;
    }
    //Final attack - spawn circle
    if(frame == 5429) {
        var a = 0;
        repeat(50) {
            finalcircleapples[a] = instance_create(-111, -111, objApple);
            finalcircleapples[a].nodel = true;
            a += 1;
        }
    }
    //Final attack - move circle inwards (by setting every apple's x and y on every frame using lengthdir)
    if(frame &gt; 5429 and frame &lt; 5888) {
        var ang = finalcircleangle;
        var a = 0;
        repeat(50) {
            finalcircleapples[a].x = 400 + lengthdir_x(finalcircleradius, ang);
            finalcircleapples[a].y = 304 + lengthdir_y(finalcircleradius, ang);
            finalcircleapples[a].image_blend = objForeground.image_blend;
            
            a += 1;
            ang += 7.2;
        }
        
        finalcircleangle += 3;
        finalcircleradius -= 2.5; // changed from 1 to recreate original
    }
    //End
    if(frame == 5888) {
        global.infJump = false;
        room_goto_next();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
